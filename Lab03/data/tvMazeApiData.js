const axios = require("axios");

const exportedMethods = {
  async getAllShows() {
    try {
      const { data } = await axios.get("http://api.tvmaze.com/shows");
      return data;
    } catch (e) {
      throw {
        status: 500,
        error: "Axios called failed - Generated by '/data/tvMazeApiData.js'.",
      };
    }
  },

  async getShowById(id) {
    if (id === undefined) {
      throw {
        status: 400,
        error:
          "ID parameter not passed - Generated by '/data/tvMazeApiData.js'.",
      };
    }

    if (typeof id != "string") {
      throw {
        status: 400,
        error:
          "ID paramenter must be passed in string format from URL - Generated by '/data/tvMazeApiData.js'.",
      };
    }

    if (id.trim() === "") {
      throw {
        status: 400,
        error:
          "ID paramenter cannot be empty spaces - Generated by '/data/tvMazeApiData.js'.",
      };
    }
    if (isNaN(id * 1)) {
      throw {
        status: 400,
        error:
          "ID paramenter must be a positive whole number, not letters or symbols - Generated by '/data/tvMazeApiData.js'.",
      };
    }
    if (id * 1 <= 0) {
      throw {
        status: 400,
        error:
          "ID paramenter must be a positive whole number, not zero or negatives - Generated by '/data/tvMazeApiData.js'.",
      };
    }

    if ((id * 1) % 1 > 0) {
      throw {
        status: 400,
        error:
          "ID paramenter must be a positive whole number, not decimals - Generated by '/data/tvMazeApiData.js'.",
      };
    }

    try {
      const { data } = await axios.get(`http://api.tvmaze.com/shows/${id}`);
      var regex = /(<([^>]+)>)/gi,
        body = data.summary;
      result = body.replace(regex, "");
      data.summary = result;
      return data;
    } catch (e) {
      throw {
        status: 404,
        error:
          "No show found with provided ID - Generated by '/data/tvMazeApiData.js'.",
      };
    }
  },

  async getShowByName(name) {
    if (name === undefined) {
      throw {
        status: 400,
        error:
          "ID parameter not passed - Generated by '/data/tvMazeApiData.js'.",
      };
    }

    if (typeof name != "string") {
      throw {
        status: 400,
        error:
          "ID paramenter must be passed in string format from URL - Generated by '/data/tvMazeApiData.js'.",
      };
    }

    if (name.trim() === "") {
      throw {
        status: 400,
        error:
          "ID paramenter cannot be empty spaces - Generated by '/data/tvMazeApiData.js'.",
      };
    }

    try {
      const { data } = await axios.get(
        `http://api.tvmaze.com/search/shows?q=${name}`
      );
      return data;
    } catch (e) {
      throw {
        status: 500,
        error:
          "Error while Axios call - Generated by '/data/tvMazeApiData.js'.",
      };
    }
  },
};

module.exports = exportedMethods;
